# =============================================================================
# 0.0 | Wrapper Function
# =============================================================================
# Written by: John Kiley 5/27/2019
# Last Modified by: John Kiley 5/27/2019
#
# Managing the pipeline began to become a bit tedius so I wrote a wrapper function
# The wrapper function calls the scripts as requested and executes them
#
# Notes: I wouldn't mind rewriting this at some point as a list of files with a switch on/off
#
# =============================================================================
# 0.1 | Define Globabl Variables
# =============================================================================
# Put working directories/paths here...
import os
# put the path of where the RNNs are located h
os.chdir(r'C:\Users\johnk\Desktop\Grad School\6. Spring 2019\1. MSDS_453_NLP\6. Homework\week8\rnn')

# put the location of the parent git controlled folder
dirs=r'C:\Users\johnk\Desktop\Grad School\6. Spring 2019\1. MSDS_453_NLP\6. Homework\week8'


# =============================================================================
# 1.0 | Execute Scraping
# =============================================================================
# Written by: John Kiley 5/27/2019
# Last Modified by: John Kiley 5/27/2019
#
# Default scrapy bot updated to use the Crawler scraper
# Scrapes the website "AZlyrics for your selected artist
# I was able to successfully scrape all the lyrics for Real Friends before having my IP banned
# That will be my starting corpus 
#
# Notes:  Currently commented out because I have the data I need
# =============================================================================

#exec(open(dirs+"\scraper_bot\lyrics\run-lyrics-spider.py").read());
print('Skip Script 1--------------------------')

# =============================================================================
# 2.0 | Preprocess Text -- Lines as Tokens
# =============================================================================
# Written by: John Kiley 5/27/2019
# Last Modified by: John Kiley 5/27/2019
#
# This process takes the core JSONLINES file generated by the scraper and puts it into
# A .CSV file that can be used to train a RNN.
# Each lyric line has its own row in the output dataset
# 
# Notes: The sequences/lines are not yet vectorized
# =============================================================================

exec(open(dirs+"\preprocessing\prepare_lines_as_tokens.py").read());
print('End of Script 2--------------------------')

# =============================================================================
# 3.0 | Preprocess Text -- Words as Tokens
# =============================================================================
# Written by: John Kiley 5/27/2019
# Last Modified by: John Kiley 5/27/2019
#
# This process takes the core JSONLINES file generated by the scraper 
# This process tokenizes the words and prepares them for a TFIDF analysis
# The RNN is not dependent on this; this is used only for analysis & understanding
# 
# Notes: This process is optional
# =============================================================================

exec(open(dirs+"\preprocessing\prepare_words_as_tokens.py").read());
print('End of Script 3--------------------------')


# =============================================================================
# 4.0 | Train & Print Recurrent Neural Network
# =============================================================================
# Written by: John Kiley --> Model based on articles linked below
# Last Modified by: 06/05/2019 | John Kiley
#
# Actual recurrent neural network; based on code from Taylor Swift AI lyric generator.
# https://colab.research.google.com/drive/1wlZXZBvOo93pAmTtEUeTlPsgAP4D1bLA#scrollTo=I5EngGk8YuJv
# https://github.com/minimaxir/textgenrnn
# 
# Note: THIS TAKES SEVERAL HOURS AND A LOT OF COMPUTING RESORUCES TO RUN
# =============================================================================
# Change working directory

#exec(open(dirs+"\\rnn\\rnn.py").read());
print('Skip Script 4--------------------------')
#%%
# =============================================================================
# 5.0 | Skip Training & Only use the model based on weightings
# =============================================================================
# Written by: NA
# Last Modified by: NA
#
# Actual recurrent neural network; based on code from Taylor Swift AI lyric generator.
# https://colab.research.google.com/drive/1wlZXZBvOo93pAmTtEUeTlPsgAP4D1bLA#scrollTo=I5EngGk8YuJv
# https://github.com/minimaxir/textgenrnn
# 
# Note: This will leverage the pretrained weights to execute the model
# =============================================================================

exec(open(dirs+"\\rnn\\rnn_remove_train.py").read());
print('End of Script 5--------------------------')